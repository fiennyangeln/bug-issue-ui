yarn run v1.10.1
$ /Users/fangelina/Documents/bug-issue-ui/node_modules/.bin/neutrino --inspect --mode production
{
  mode: 'production',
  target: 'web',
  context: '/Users/fangelina/Documents/bug-issue-ui',
  stats: {
    children: false,
    entrypoints: false,
    modules: false
  },
  node: {
    Buffer: false,
    fs: 'empty',
    tls: 'empty'
  },
  output: {
    path: '/Users/fangelina/Documents/bug-issue-ui/build',
    publicPath: '/',
    filename: 'assets/[name].[contenthash:8].js'
  },
  resolve: {
    alias: {
      'react-native': 'react-native-web'
    },
    extensions: [
      '.web.jsx',
      '.web.js',
      '.wasm',
      '.mjs',
      '.jsx',
      '.js',
      '.json'
    ],
    modules: [
      '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/eslint/node_modules'
    ]
  },
  resolveLoader: {
    modules: [
      '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/eslint/node_modules'
    ]
  },
  module: {
    rules: [
      /* neutrino.config.module.rule('lint') */
      {
        test: /\.(wasm|mjs|jsx|js)$/,
        enforce: 'pre',
        include: [
          '/Users/fangelina/Documents/bug-issue-ui/src'
        ],
        use: [
          /* neutrino.config.module.rule('lint').use('eslint') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/eslint/node_modules/eslint-loader/index.js',
            options: {
              failOnError: true,
              cwd: '/Users/fangelina/Documents/bug-issue-ui',
              useEslintrc: false,
              root: true,
              formatter: function(results) {
                  let errors = 0;
                  let warnings = 0;
                  let fixableErrors = 0;
                  let fixableWarnings = 0;
              
                  const resultsWithMessages = results.filter(result => result.messages.length > 0);
              
                  let output = resultsWithMessages.reduce((resultsOutput, result) => {
                      const messages = result.messages.map(message => `${formatMessage(message, result)}\n\n`);
              
                      errors += result.errorCount;
                      warnings += result.warningCount;
                      fixableErrors += result.fixableErrorCount;
                      fixableWarnings += result.fixableWarningCount;
              
                      return resultsOutput.concat(messages);
                  }, []).join("\n");
              
                  output += "\n";
                  output += formatSummary(errors, warnings, fixableErrors, fixableWarnings);
              
                  return (errors + warnings) > 0 ? output : "";
              },
              extensions: [
                'wasm',
                'mjs',
                'jsx',
                'js'
              ],
              plugins: [
                'babel',
                'prettier'
              ],
              baseConfig: {
                'extends': [
                  'airbnb',
                  'eslint-config-prettier',
                  'plugin:react/recommended'
                ],
                env: {
                  browser: true,
                  commonjs: true,
                  'jest/globals': true
                },
                plugins: [
                  'react',
                  'jest'
                ],
                settings: {
                  react: {
                    version: '999.999.999'
                  }
                },
                rules: {
                  'jest/no-disabled-tests': 'warn',
                  'jest/no-focused-tests': 'error',
                  'jest/no-identical-title': 'error',
                  'jest/valid-expect': 'error'
                }
              },
              envs: [
                'es6'
              ],
              parser: 'babel-eslint',
              parserOptions: {
                ecmaVersion: 2017,
                sourceType: 'module',
                ecmaFeatures: {
                  objectLiteralDuplicateProperties: false,
                  generators: true,
                  impliedStrict: true,
                  legacyDecorators: true
                }
              },
              settings: {},
              globals: [
                'process'
              ],
              rules: {
                'new-cap': 'off',
                'object-curly-spacing': 'off',
                'babel/new-cap': 'off',
                'babel/object-curly-spacing': [
                  'error',
                  'always'
                ],
                'react/jsx-wrap-multilines': 'off',
                'react/prop-types': 'off',
                'react/jsx-one-expression-per-line': 'off',
                'react/forbid-prop-types': 'off',
                'react/prefer-stateless-function': 'off',
                'react/no-access-state-in-setstate': 'off',
                'react/destructuring-assignment': 'off',
                'babel/no-unused-expressions': 'off',
                'import/no-extraneous-dependencies': 'off',
                'max-len': [
                  'error',
                  80,
                  2,
                  {
                    ignoreUrls: true,
                    ignoreComments: false,
                    ignoreStrings: true,
                    ignoreTemplateLiterals: true
                  }
                ],
                'class-methods-use-this': 'off',
                'no-console': 'error',
                'prettier/prettier': [
                  'error',
                  {
                    singleQuote: true,
                    trailingComma: 'es5',
                    bracketSpacing: true,
                    jsxBracketSameLine: false
                  }
                ],
                'consistent-return': 'off',
                'no-shadow': 'off',
                'no-return-assign': 'off',
                'no-mixed-operators': 'off',
                'jsx-a11y/anchor-is-valid': [
                  'error',
                  {
                    components: [
                      'Link'
                    ],
                    specialLink: [
                      'to'
                    ]
                  }
                ]
              },
              emitWarning: false
            }
          }
        ]
      },
      /* neutrino.config.module.rule('html') */
      {
        test: /\.html$/,
        use: [
          /* neutrino.config.module.rule('html').use('html') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/html-loader/index.js',
            options: {
              attrs: [
                'img:src',
                'link:href'
              ]
            }
          }
        ]
      },
      /* neutrino.config.module.rule('compile') */
      {
        test: /\.(wasm|mjs|jsx|js)$/,
        include: [
          '/Users/fangelina/Documents/bug-issue-ui/src',
          '/Users/fangelina/Documents/bug-issue-ui/test'
        ],
        use: [
          /* neutrino.config.module.rule('compile').use('babel') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/babel-loader/lib/index.js',
            options: {
              cacheDirectory: true,
              babelrc: false,
              configFile: false,
              presets: [
                [
                  '/Users/fangelina/Documents/bug-issue-ui/node_modules/@babel/preset-env/lib/index.js',
                  {
                    debug: false,
                    useBuiltIns: 'entry',
                    targets: {
                      browsers: [
                        'last 2 Chrome versions',
                        'last 2 Firefox versions',
                        'last 2 Edge versions',
                        'last 2 Opera versions',
                        'last 2 Safari versions',
                        'last 2 iOS versions'
                      ]
                    }
                  }
                ],
                [
                  '/Users/fangelina/Documents/bug-issue-ui/node_modules/@babel/preset-react/lib/index.js',
                  {
                    development: false,
                    useBuiltIns: true
                  }
                ]
              ],
              plugins: [
                '/Users/fangelina/Documents/bug-issue-ui/node_modules/@babel/plugin-syntax-dynamic-import/lib/index.js',
                '/Users/fangelina/Documents/bug-issue-ui/node_modules/@babel/plugin-proposal-class-properties/lib/index.js',
                [
                  '/Users/fangelina/Documents/bug-issue-ui/node_modules/@babel/plugin-proposal-decorators/lib/index.js',
                  {
                    legacy: true
                  }
                ]
              ]
            }
          }
        ]
      },
      /* neutrino.config.module.rule('style') */
      {
        test: /\.css$/,
        exclude: [
          /\.module\.css$/
        ],
        use: [
          /* neutrino.config.module.rule('style').use('extract') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/mini-css-extract-plugin/dist/loader.js'
          },
          /* neutrino.config.module.rule('style').use('css') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/css-loader/index.js',
            options: {
              importLoaders: 0
            }
          }
        ]
      },
      /* neutrino.config.module.rule('style-modules') */
      {
        test: /\.module\.css$/,
        use: [
          /* neutrino.config.module.rule('style-modules').use('extract-modules') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/mini-css-extract-plugin/dist/loader.js'
          },
          /* neutrino.config.module.rule('style-modules').use('css-modules') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/css-loader/index.js',
            options: {
              importLoaders: 0,
              modules: true
            }
          }
        ]
      },
      /* neutrino.config.module.rule('font') */
      {
        test: /\.(eot|ttf|woff|woff2)(\?v=\d+\.\d+\.\d+)?$/,
        use: [
          /* neutrino.config.module.rule('font').use('file') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/file-loader/dist/cjs.js',
            options: {
              name: 'assets/[name].[hash:8].[ext]'
            }
          }
        ]
      },
      /* neutrino.config.module.rule('image') */
      {
        test: /\.(ico|png|jpg|jpeg|gif|svg|webp)(\?v=\d+\.\d+\.\d+)?$/,
        use: [
          /* neutrino.config.module.rule('image').use('url') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 8192,
              name: 'assets/[name].[hash:8].[ext]'
            }
          }
        ]
      },
      /* neutrino.config.module.rule('js-yaml') */
      {
        test: /\.(yaml|yml)$/,
        use: [
          /* neutrino.config.module.rule('js-yaml').use('js-yaml-loader') */
          {
            options: {
              safe: true
            },
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/js-yaml-loader/index.js'
          }
        ]
      },
      /* neutrino.config.module.rule('graphql') */
      {
        test: /\.graphql$/,
        include: [
          '/Users/fangelina/Documents/bug-issue-ui/src'
        ],
        use: [
          /* neutrino.config.module.rule('graphql').use('gql-loader') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/graphql-tag/loader.js'
          }
        ]
      },
      /* neutrino.config.module.rule('svg') */
      {
        test: /\.svg(\?v=\d+\.\d+\.\d+)?$/,
        use: [
          /* neutrino.config.module.rule('svg').use('svg-inline-loader') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/svg-inline-loader/index.js'
          },
          /* neutrino.config.module.rule('svg').use('url') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/image-loader/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 1,
              name: '[name].[ext]'
            }
          }
        ]
      },
      /* neutrino.config.module.rule('img') */
      {
        test: /\.(png|jpg|jpeg|gif|webp)(\?v=\d+\.\d+\.\d+)?$/,
        use: [
          /* neutrino.config.module.rule('img').use('url') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/image-loader/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 1,
              name: '[name].[ext]'
            }
          }
        ]
      },
      /* neutrino.config.module.rule('ico') */
      {
        test: /\.ico(\?v=\d+\.\d+\.\d+)?$/,
        use: [
          /* neutrino.config.module.rule('ico').use('url') */
          {
            loader: '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/image-loader/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 1,
              name: '[name].[ext]'
            }
          }
        ]
      }
    ]
  },
  optimization: {
    minimize: true,
    splitChunks: {
      chunks: 'all',
      maxInitialRequests: 5,
      name: false
    },
    runtimeChunk: 'single',
    minimizer: [
      /* neutrino.config.optimization.minimizer('terser') */
      new (require('/Users/fangelina/Documents/bug-issue-ui/node_modules/terser-webpack-plugin/dist/cjs.js'))(
        {
          cache: true,
          parallel: true,
          sourceMap: false
        }
      )
    ]
  },
  plugins: [
    /* neutrino.config.plugin('env') */
    new (require('/Users/fangelina/Documents/bug-issue-ui/node_modules/webpack/lib/EnvironmentPlugin.js'))(
      {
        GITHUB_PERSONAL_API_TOKEN: '',
        BUGZILLA_ENDPOINT: 'http://localhost:3090',
        NODE_ENV: 'development',
        PORT: 5000
      }
    ),
    /* neutrino.config.plugin('html-index') */
    new (require('/Users/fangelina/Documents/bug-issue-ui/node_modules/html-webpack-plugin/index.js'))(
      {
        template: '/Users/fangelina/Documents/bug-issue-ui/node_modules/@neutrinojs/html-template/template.ejs',
        appMountId: 'root',
        lang: 'en',
        meta: [
          {
            name: 'Description',
            content: 'Find your first code contribution with Mozilla'
          }
        ],
        filename: 'index.html',
        chunks: [
          'index'
        ],
        title: 'Codetribute',
        favicon: './src/static/favicon.png'
      }
    ),
    /* neutrino.config.plugin('extract') */
    new (require('/Users/fangelina/Documents/bug-issue-ui/node_modules/mini-css-extract-plugin/dist/cjs.js'))(
      {
        filename: 'assets/[name].[contenthash:8].css'
      }
    ),
    /* neutrino.config.plugin('clean') */
    new (require('/Users/fangelina/Documents/bug-issue-ui/node_modules/clean-webpack-plugin/index.js'))(
      [
        '/Users/fangelina/Documents/bug-issue-ui/build'
      ],
      {
        root: '/Users/fangelina/Documents/bug-issue-ui',
        verbose: false,
        allowExternal: false,
        dry: false
      }
    )
  ],
  entry: {
    index: [
      '/Users/fangelina/Documents/bug-issue-ui/src/index'
    ]
  }
}
Done in 0.90s.
